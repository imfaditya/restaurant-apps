{"version":3,"file":"app~7bd12dde.bundle.js","mappings":"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","sources":["webpack://restaurant-apps/./src/scripts/data/favorite-food-source.js","webpack://restaurant-apps/./src/scripts/data/favorite-restaurant-idb.js","webpack://restaurant-apps/./src/scripts/data/restaurant-source.js","webpack://restaurant-apps/./src/scripts/globals/api-endpoint.js","webpack://restaurant-apps/./src/scripts/globals/config.js","webpack://restaurant-apps/./src/scripts/index.js"],"sourcesContent":["import API_ENDPOINT from '../globals/api-endpoint';\n\nclass FavoriteFood {\n  static async itemFavoriteFood() {\n    const response = await fetch(API_ENDPOINT.GET_FAVORITE_FOOD);\n    const responseJSON = await response.json();\n    return responseJSON.meals[0];\n  }\n}\n\nexport default FavoriteFood;\n","import { openDB } from 'idb';\nimport CONFIG from '../globals/config';\n\nconst { DATABASE_NAME, DATABASE_VERSION, OBJECT_STORE_NAME } = CONFIG;\n\nconst dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n  upgrade(database) {\n    database.createObjectStore(OBJECT_STORE_NAME, { keyPath: 'id' });\n  },\n});\n\nconst FavoriteRestaurantIdb = {\n  async getRestaurant(id) {\n    if (id) {\n      return (await dbPromise).get(OBJECT_STORE_NAME, id);\n    }\n  },\n\n  async getAllRestaurants() {\n    return (await dbPromise).getAll(OBJECT_STORE_NAME);\n  },\n\n  async putRestaurant(restaurant) {\n    if (restaurant.hasOwnProperty('id')) {\n      return (await dbPromise).put(OBJECT_STORE_NAME, restaurant);\n    }\n  },\n\n  async deleteRestaurant(id) {\n    return (await dbPromise).delete(OBJECT_STORE_NAME, id);\n  },\n};\n\nexport default FavoriteRestaurantIdb;\n","import API_ENDPOINT from '../globals/api-endpoint';\n\nclass RestaurantsSource {\n  static async listRestaurants() {\n    const response = await fetch(API_ENDPOINT.GET_RESTAURANT);\n    const responseJSON = await response.json();\n    return responseJSON.restaurants;\n  }\n\n  static async detailRestaurant(id) {\n    const response = await fetch(API_ENDPOINT.GET_DETAIL_RESTAURANT(id));\n    const responseJSON = await response.json();\n    return responseJSON.restaurant;\n  }\n\n  static async postReview(review) {\n    const response = await fetch(API_ENDPOINT.POST_REVIEW_RESTAURANT, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(review),\n    });\n    const responseJSON = await response.json();\n    return responseJSON;\n  }\n}\n\nexport default RestaurantsSource;\n","import CONFIG from './config';\n\nconst API_ENDPOINT = {\n  GET_RESTAURANT: `${CONFIG.BASE_URL}list`,\n  GET_DETAIL_RESTAURANT: (id) => `${CONFIG.BASE_URL}detail/${id}`,\n  POST_REVIEW_RESTAURANT: `${CONFIG.BASE_URL}review`,\n  GET_FAVORITE_FOOD: `${CONFIG.BASE_URL_FAVORITE_FOOD}random.php`,\n};\n\nexport default API_ENDPOINT;\n","const CONFIG = {\n  BASE_URL: 'https://restaurant-api.dicoding.dev/',\n  BASE_IMAGE_URL: 'https://restaurant-api.dicoding.dev/images/medium/',\n  BASE_URL_FAVORITE_FOOD: 'https://themealdb.com/api/json/v1/1/',\n  DATABASE_NAME: 'restaurant-database',\n  DATABASE_VERSION: 1,\n  OBJECT_STORE_NAME: 'fav-resto',\n};\n\nexport default CONFIG;\n","import 'regenerator-runtime';\nimport '../styles/main.css';\nimport '../styles/responsive.css';\nimport './views/components/appbar';\nimport './views/components/footerbar';\nimport 'lazysizes';\nimport 'lazysizes/plugins/parent-fit/ls.parent-fit';\nimport swRegister from './utils/sw-register';\nimport App from './views/app';\n\nconst app = new App({\n  button: document.querySelector('.hamburger-link'),\n  drawer: document.querySelector('.nav'),\n  content: document.querySelector('main'),\n});\n\nwindow.addEventListener('hashchange', () => {\n  app.renderPage();\n});\n\nwindow.addEventListener('load', () => {\n  app.renderPage();\n  swRegister();\n});\n"],"names":["fetch","API_ENDPOINT","response","json","responseJSON","meals","i","DATABASE_NAME","CONFIG","DATABASE_VERSION","OBJECT_STORE_NAME","dbPromise","openDB","upgrade","database","createObjectStore","keyPath","getRestaurant","id","get","getAllRestaurants","getAll","putRestaurant","restaurant","hasOwnProperty","put","deleteRestaurant","restaurants","review","method","headers","body","JSON","stringify","GET_RESTAURANT","GET_DETAIL_RESTAURANT","POST_REVIEW_RESTAURANT","GET_FAVORITE_FOOD","BASE_URL","BASE_IMAGE_URL","BASE_URL_FAVORITE_FOOD","app","App","button","document","querySelector","drawer","content","window","addEventListener","renderPage","swRegister"],"sourceRoot":""}